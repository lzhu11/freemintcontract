{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","console","log","contract","Web3","require","web3","givenProvider","contractAddress","abi","networkid","App","_useState","useState","_useState2","_slicedToArray","currentAccount","setCurrentAccount","checkWalletIsConnected","_ref","_asyncToGenerator","_callee","_window","ethereum","accounts","account","_context","window","request","on","accounts1","networkid1","netWorkVersion","params","chainId","utils","toHex","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","apply","arguments","connectWalletHandler","_ref2","_callee2","_window2","_context2","alert","t0","mintNftHandler","_ref3","_callee3","_window3","provider","signer","nftContract","nftTxn","_context3","document","getElementById","disabled","ethers","providers","Web3Provider","getSigner","Contract","safeMint","wait","concat","hash","useEffect","React","createElement","className","onClick","id","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.aae861a4.chunk.js","sourcesContent":["import React,{ useEffect,useState } from 'react';\nimport './App.css';\nimport contract from './contracts/NFTCollectible.json';\nimport { ethers } from 'ethers';\n\n\nconsole.log(contract)\nconst Web3 = require('web3');\nconst web3 = new Web3(Web3.givenProvider);\n// const contractAddress = \"0x5F7959A124C44fa8E352ed614d245305781E6153\";  //失敗的bayc，因為多加了extension\n// const contractAddress = \"0xaE0714715702991ee63fdb59BDd9e6E00F48b46d\";    bayc\nconst contractAddress = \"0x408fB96D4ca495DD660a7a3cEf382653c9e0f287\";\nconst abi = contract;\nconsole.log(\"line09\"+abi);\nvar networkid = 5;\n\nfunction App() {\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n\n  const checkWalletIsConnected = async() => { \n    const { ethereum } = window;\n\n    if (!ethereum){\n      console.log(\"make sure you have metamask installed!\");\n      return;\n    }else{\n      console.log(+\"wallet exists! we are ready to go!\");\n    }\n\n    const accounts = await ethereum.request({method:'eth_accounts'});\n\n    if (accounts.length !== 0){\n      const account = accounts[0];\n      console.log(\"found an authorized account: \",account);\n      setCurrentAccount(account);\n    }else{\n      console.log(\"no authorized account found\");\n    }\n    ethereum.on('accountsChanged', (accounts1) =>{\n      accounts[0] = accounts1;\n      console.log(accounts[0]);\n    })\n    ethereum.on('networkChanged', (networkid1)=> {\n      networkid = networkid1;\n      console.log(networkid);\n    })\n    if (window.ethereum.netWorkVersion !== 5){\n      try{\n        window.ethereum.request({\n          method:'wallet_switchEthereumChain',\n          params:[{chainId:web3.utils.toHex(5)}]\n        });\n      }\n      catch (err){\n        if(err.code === 4902){\n          window.ethereum.request({\n            method:'wallet_switchEthereumChain',\n            params:[{\n              chainName:'Goerli Testnet',\n              chainId:web3.utils.toHex(5),\n              nativeCurrency:{\n                name:'Goerli',\n                decimals:18,\n                symbol:'ETH'\n              },\n              rpcUrls:['https://eth-goerli.g.alchemy.com/v2/[YOUR-API-KEY']\n            }]\n          });\n        }\n      }\n    }\n  }\n\n  const connectWalletHandler = async() => {\n    const { ethereum } = window;\n    \n    if(!ethereum){\n      alert(\"please install metamask!\");\n    }\n\n    try{\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n      console.log(\"found an account! address: \",accounts[0]);\n      setCurrentAccount(accounts[0]);\n    }catch(err){\n      console.log(err)\n    }\n   }\n\n  const mintNftHandler = async() => {\n    try{\n      const {ethereum} = window;\n\n      if(!ethereum){\n        console.log(\"ethereum object does not exist\");\n      }else{\n        if (window.ethereum.netWorkVersion !== 5){\n          try{\n            window.ethereum.request({\n              method:'wallet_switchEthereumChain',\n              params:[{chainId:web3.utils.toHex(5)}]\n            });\n          }\n          catch (err){\n            if(err.code === 4902){\n              window.ethereum.request({\n                method:'wallet_switchEthereumChain',\n                params:[{\n                  chainName:'Goerli Testnet',\n                  chainId:web3.utils.toHex(5),\n                  nativeCurrency:{\n                    name:'Goerli',\n                    decimals:18,\n                    symbol:'ETH'\n                  },\n                  rpcUrls:['https://eth-goerli.g.alchemy.com/v2/[YOUR-API-KEY']\n                }]\n              });\n            }\n          }\n        }\n        document.getElementById(\"cta-button mint-nft-button\").disabled = true;\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        // const nftContract = new ethers.Contract(contractAddress, abi ,signer);\n        const nftContract = new ethers.Contract(contractAddress,abi,signer);\n        console.log(\"initialize payment\");\n        let nftTxn = await nftContract.safeMint();\n        alert(\"Mining...please wait!\");\n\n        console.log(\"Mining...please wait!\");\n        await nftTxn.wait();\n\n        console.log(`Mined, see transaction : https://goerli.etherscan.io/tx/${nftTxn.hash}`);\n        document.getElementById(\"cta-button mint-nft-button\").disabled = false;\n        alert(`Mined, see transaction : https://goerli.etherscan.io/tx/${nftTxn.hash}`);\n      }\n    }catch(err){\n      console.log(err);\n      alert(\"mint failed\");\n    }\n  }\n\n  const connectWalletButton = () => {\n    return (\n      <button onClick={connectWalletHandler} className='cta-button connect-wallet-button'>\n        Connect Wallet\n      </button>\n    )\n  }\n\n  const mintNftButton = () => {\n    return (\n      <button onClick={mintNftHandler} className='cta-button mint-nft-button' id='cta-button mint-nft-button'>\n        Mint NFT\n      </button>\n    )\n  }\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, [])\n\n  return (\n    <div className='main-app'>\n      <h1>MINT NFT!!</h1>\n      <div>\n        {currentAccount ? mintNftButton() : connectWalletButton()}\n      </div>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}